/*

N개의 수로 이루어진 수열이 주어집니다.
이 수열에서 연속부분수열의 합이 특정숫자 M이 되는 경우가 몇 번 있는지 구하는 프로그램을 작성하세요.
만약 N=8, M=6이고 수열이 다음과 같다면
1 2 1 3 1 1 1 2 
합이 6이 되는 연속부분수열은 {2, 1, 3}, {1, 3, 1, 1}, {3, 1, 1, 1}로 총 3가지입니다.

연속부분수열? 아 숫자를 합했을 때. M이 되는 경우의 수를 구하는 것. 대신. 연속된 숫자 중에서 확인을 해야한다. 
2개의 인덱스를 가지고 그 사이의 숫자를 더하면서 M을 확인한다. 
먼저 l와 r이라는 인덱스를 가진다. 그래서 r은 l + 1부터 시작. 
먼저 arr[l]과 arr[r]을 더했을 때 M이 되는지를 확인한다. 
만약 M과 같다면, l을 1 증가시킨다. 그리고 count도 1을 증가시킨다. 
M보다 크다면, l을 1증가시킨다. 
만약 M보다 작다면, r을 1 증가시킨다. 
*/

const solution = (N, M, arr) => {
  let l = 0
  let r = 1
  let count = 0

  while (r <= arr.length) {
    const sum = arr.slice(l, r + 1).reduce((a, b) => a + b, 0)
    console.log(r)
    if (sum === M) {
      count++
      l++
    } else if (sum > M) {
      l++
    } else {
      r++
    }
  }

  return count
}

console.log(solution(8, 6, [1, 2, 1, 3, 1, 1, 1, 2]))

// 1, 2, 1, 3,    1, 1, 1, 2
